new()
set_precision('float')
set_message_level(0)
set_info('modal-normalisation', 0)
set_info('auto-normalise', 0)
set_info('clip', 1.2)
stop_on_condition = make_controller('dynamic', 1, -1, 0, 'stop-on-condition')
ConstantController_1 = make_controller('CONSTANT', 1, 0.5)
DynamicEnvelopeController_2 = make_controller('dynamic', 1, -1, 1)
internal_scaler_container = make_controller('container', 1, DynamicEnvelopeController_2)
BreakpointController_1 = make_controller('breakpoint', 1, DynamicEnvelopeController_2)
bille_pertes = make_controller('dynamic', 1, -1, 0.01, 'bille-pertes')
DynamicEnvelopeController_4 = make_controller('dynamic', 1, -1, 10, 'bille-masse')
masse_amp = make_controller('expression', 1, -1, '1/sqrt(in(1,1))', DynamicEnvelopeController_4)
ConstantController_2 = make_controller('CONSTANT', 1, 1)
ConstantController_3 = make_controller('CONSTANT', 1, 0)
SinglePoint_1 = make_object('single-point', ConstantController_2, ConstantController_3, bille_pertes, masse_amp)
DynamicEnvelopeController_11 = make_controller('dynamic', 1, -1, 0, 'trigger')
ContainerController_2 = make_controller('container', 1, DynamicEnvelopeController_11)
ExpressionController_2 = make_controller('expression', 0, -1, 'if in(1,1) reset_objects_dynamics(in(2)); set_value(in(3),0,0); end ', {DynamicEnvelopeController_11, SinglePoint_1, ContainerController_2})
ConstantController_4 = make_controller('CONSTANT', 1, 1)
Access_1 = make_access(SinglePoint_1, ConstantController_4, 'normal')
DynamicEnvelopeController_12 = make_controller('dynamic', 1, -1, -1, 'plaque-pertes-freq-log')
ExpressionController_3 = make_controller('expression', 1, -1, '10^in(1,1)', DynamicEnvelopeController_12)
DynamicEnvelopeController_13 = make_controller('dynamic', 1, -1, 80, 'num-modes')
DynamicEnvelopeController_14 = make_controller('dynamic', 1, -1, 0.5, 'plaque-lg-0')
DynamicEnvelopeController_15 = make_controller('dynamic', 1, -1, 0.5, 'plaque-lg-1')
DynamicEnvelopeController_16 = make_controller('dynamic', 1, -1, 0.01, 'plaque-epaisseur')
DynamicEnvelopeController_17 = make_controller('dynamic', 1, -1, 7800, 'plaque-densite')
ConstantController_5 = make_controller('CONSTANT', 1, 2e+11)
ConstantController_6 = make_controller('CONSTANT', 1, 0.3)
DynamicEnvelopeController_18 = make_controller('dynamic', 1, -1, 0.1, 'plaque-pertes-const')
plate = make_object('rect-plate', DynamicEnvelopeController_13, DynamicEnvelopeController_14, DynamicEnvelopeController_15, DynamicEnvelopeController_16, DynamicEnvelopeController_17, ConstantController_5, ConstantController_6, ExpressionController_3, DynamicEnvelopeController_18)
DynamicEnvelopeController_25 = make_controller('dynamic', 1, -1, 0.2, 'plaque-frappe-x')
DynamicEnvelopeController_26 = make_controller('dynamic', 1, -1, 0.4, 'plaque-frappe-y')
ExpressionController_4 = make_controller('expression', 2, -1, '[in(1,1),in(2,1)]', {DynamicEnvelopeController_25, DynamicEnvelopeController_26})
Access_2 = make_access(plate, ExpressionController_4, 'normal')
DynamicEnvelopeController_27 = make_controller('dynamic', 1, -1, 0.5, 'plaque-ecoute-1-x')
DynamicEnvelopeController_28 = make_controller('dynamic', 1, -1, 0.7, 'plaque-ecoute-1-y')
ExpressionController_5 = make_controller('expression', 2, -1, '[in(1,1),in(2,1)]', {DynamicEnvelopeController_27, DynamicEnvelopeController_28})
Access_3 = make_access(plate, ExpressionController_5, 'normal')
DynamicEnvelopeController_29 = make_controller('dynamic', 1, -1, 0.5, 'plaque-ecoute-2-x')
DynamicEnvelopeController_30 = make_controller('dynamic', 1, -1, 0.2, 'plaque-ecoute-2-y')
ExpressionController_6 = make_controller('expression', 2, -1, '[in(1,1),in(2,1)]', {DynamicEnvelopeController_29, DynamicEnvelopeController_30})
Access_4 = make_access(plate, ExpressionController_6, 'normal')
DynamicEnvelopeController_31 = make_controller('dynamic', 1, -1, 0.5, 'plaque-entree-1-x')
DynamicEnvelopeController_32 = make_controller('dynamic', 1, -1, 0.2, 'plaque-entree-1-y')
ExpressionController_7 = make_controller('expression', 2, -1, '[in(1,1),in(2,1)]', {DynamicEnvelopeController_31, DynamicEnvelopeController_32})
Access_5 = make_access(plate, ExpressionController_7, 'normal')
StrikeConnection_1 = make_connection('strike', Access_1, 0.1, Access_2, 0)
ConnectionStateController_1 = make_controller('connection-state', 1, StrikeConnection_1)
after_strike = make_controller('expression', 2, -1, 'if get_info(''time'') == 0 out(1) = 0 ; out(2) = 0 ; end ; prev = out(2); curr = in(1,1) ; aft = or(out(1),prev && ~curr) ; [aft,curr]', ConnectionStateController_1)
DynamicEnvelopeController_33 = make_controller('dynamic', 1, -1, 1, 'gain-entree')
PointInput_1 = make_point_input(0, DynamicEnvelopeController_33)
SignalController_1 = make_controller('signal', 1, PointInput_1)
ForceConnection_1 = make_connection('force', Access_5, SignalController_1)
DynamicEnvelopeController_34 = make_controller('dynamic', 1, -1, 0, 'noise-weight')
ConstantController_7 = make_controller('CONSTANT', 1, 100)
RandomController_1 = make_controller('random', 1, 0)
ArithmeticController_1 = make_controller('arithmetic', 1, '*', {ConstantController_7, RandomController_1})
ForceConnection_2 = make_connection('force', Access_5, ArithmeticController_1, DynamicEnvelopeController_34)
DynamicEnvelopeController_35 = make_controller('dynamic', 1, -1, 9.81, 'g')
ExpressionController_9 = make_controller('expression', 1, -1, '-in(1,1)*in(2,1)', {DynamicEnvelopeController_4, DynamicEnvelopeController_35})
ForceConnection_3 = make_connection('force', Access_1, ExpressionController_9)
ArithmeticController_2 = make_controller('ARITHMETIC', 1, '*', {DynamicEnvelopeController_2, ConstantController_1})
ArithmeticController_3 = make_controller('ARITHMETIC', 1, '*', {DynamicEnvelopeController_2, ConstantController_1})
PointOutput_1 = make_point_output(Access_3, 0, ArithmeticController_2)
PointOutput_2 = make_point_output(Access_4, 1, ArithmeticController_3)
ExpressionController_10 = make_controller('expression', 0, -1, 'if ~in(1,1) && in(2,1) stop() ; set_value_time(in(3),0,1,get_info(''sample-period'')); end', BreakpointController_1, stop_on_condition, internal_scaler_container)
stop_sensitivity = make_controller('dynamic', 1, -1, 0, 'stop-sensitivity')
stop_decay_time = make_controller('dynamic', 1, -1, 1, 'stop-decay-time')
DynamicEnvelopeController_38 = make_controller('dynamic', 1, -1, 0, 'monitor-done')
monitor_done_container = make_controller('container', 1, DynamicEnvelopeController_38)
monitor = make_controller('expression', 0, 0.001, 'done = get_value(in(7),0); if in(4,1) && ~done   energy_condition = (get_info(''MODAL-SPEED-NORM'',in(2)) < 10^(-6-in(5,1)));   after_strike = in(1,1);   if energy_condition && after_strike     set_value_time(in(3),0,0,1e-3*in(6,1));     set_value(in(7),0,true);   end ; end ', {after_strike, plate, internal_scaler_container, stop_on_condition, stop_sensitivity, stop_decay_time, monitor_done_container})
